<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">

	<context:component-scan base-package="com.solairis.yourcarslife.connect"/>

	<bean id="entryPoint" class="org.springframework.security.web.authentication.DelegatingAuthenticationEntryPoint">
		<constructor-arg>
			<map>
				<entry>
					<key>
						<bean class="com.solairis.yourcarslife.requestmatcher.ServicesRequestMatcher"/>
					</key>
					<bean class="com.solairis.yourcarslife.security.Http401NotAuthorizedEntryPoint"/>
				</entry>
			</map>
		</constructor-arg>
		<property name="defaultEntryPoint">
			<bean class="org.springframework.security.web.authentication.LoginUrlAuthenticationEntryPoint">
				<property name="loginFormUrl" value="/login"/>
			</bean>
		</property>
	</bean>

	<security:http pattern="/create-account" security="none"/>
	<security:http pattern="/favicon.ico" security="none"/>
	<security:http pattern="/resources/**" security="none"/>
	<security:http pattern="/wro/**" security="none"/>
	<security:http pattern="/" security="none"/>
	<security:http pattern="/dash" security="none"/>
	<security:http pattern="/log/fuel" security="none"/>
	<security:http pattern="/log/service" security="none"/>
	<security:http pattern="/vehicle" security="none"/>

	<security:http use-expressions="true" auto-config="true" entry-point-ref="entryPoint">
		<security:intercept-url pattern="/api/currentuser" access="hasAnyRole('ROLE_ANONYMOUS', 'ROLE_USER')"/>
		<security:intercept-url pattern="/login" access="hasAnyRole('ROLE_ANONYMOUS', 'ROLE_USER')"/>
		<security:intercept-url pattern="/signin/**" access="hasAnyRole('ROLE_ANONYMOUS')"/>
		<security:intercept-url pattern="/admin" access="hasAnyRole('ROLE_ADMIN')"/>
		<security:intercept-url pattern="/**" access="hasAnyRole('ROLE_USER')"/>
		<security:logout logout-url="/logout" invalidate-session="true" logout-success-url="/login"/>
		<security:form-login login-page="/login" authentication-failure-url="/login?login_error=true" default-target-url="/dash" always-use-default-target="true"/>
		<security:anonymous/>
		<security:remember-me key="yourCarsLifeRememberMeKey" services-ref="rememberMeServices"/>
		<security:http-basic/>
	</security:http>

	<!-- Set up our own User Service -->
	<security:jdbc-user-service id="jdbcUserService" data-source-ref="dataSource"
				    users-by-username-query="SELECT login,password,enabled FROM user WHERE login=?"
				    authorities-by-username-query="SELECT ur.userId,ur.roleKey FROM userRole ur, user u WHERE u.login=? and ur.userId=u.userId"/>

	<bean id="jdbcTokenRepository" class="org.springframework.security.web.authentication.rememberme.JdbcTokenRepositoryImpl">
		<property name="createTableOnStartup" value="false"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="rememberMeServices" class="org.springframework.security.web.authentication.rememberme.PersistentTokenBasedRememberMeServices">
		<property name="tokenRepository" ref="jdbcTokenRepository"/>
		<property name="userDetailsService" ref="jdbcUserService"/>
		<property name="key" value="yourCarsLifeRememberMeKey"/>
		<property name="alwaysRemember" value="true"/>
	</bean>

	<security:authentication-manager>
		<security:authentication-provider user-service-ref="jdbcUserService">
			<security:password-encoder hash="md5"/>
		</security:authentication-provider>
	</security:authentication-manager>

	<bean id="connectionFactoryLocator" class="org.springframework.social.connect.support.ConnectionFactoryRegistry">
		<property name="connectionFactories">
			<list>
				<bean class="org.springframework.social.facebook.connect.FacebookConnectionFactory">
					<constructor-arg value="${facebook.client.id}"/>
					<constructor-arg value="${facebook.client.secret}"/>
				</bean>
			</list>
		</property>
	</bean>

	<bean id="textEncryptor" class="org.springframework.security.crypto.encrypt.Encryptors" factory-method="noOpText"/>

	<!--	<bean id="connectionConverter" class="org.springframework.social.connect.mongo.ConnectionConverter">
		<constructor-arg ref="connectionFactoryLocator"/>
		<constructor-arg ref="textEncryptor"/>
	</bean>-->

	<!--	<bean id="connectionService" class="org.springframework.social.connect.jdbc.JdbcConnectionRepository">
		<constructor-arg ref=""/>
		<constructor-arg ref="connectionConverter"/>
	</bean>-->

	<bean id="usersConnectionRepository" class="org.springframework.social.connect.jdbc.JdbcUsersConnectionRepository">
		<constructor-arg ref="dataSource"/>
		<constructor-arg ref="connectionFactoryLocator"/>
		<constructor-arg ref="textEncryptor"/>
		<property name="connectionSignUp" ref="userConnectionSignUp"/>
	</bean>

	<bean id="connectionRepository" factory-method="createConnectionRepository"
	      factory-bean="usersConnectionRepository" scope="request">
		<constructor-arg value="#{request.userPrincipal.name}" />
		<aop:scoped-proxy proxy-target-class="false" />
	</bean>

	<bean id="userConnectionSignUp" class="com.solairis.yourcarslife.connect.UserConnectionSignUp"/>
	<bean id="userSignInAdapter" class="com.solairis.yourcarslife.connect.UserSignInAdapter"/>

</beans>